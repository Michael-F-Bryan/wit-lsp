(function() {var type_impls = {
"wit_compiler":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#106-118\">source</a><a href=\"#impl-Index%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"wit_compiler/access/trait.NodeKind.html\" title=\"trait wit_compiler::access::NodeKind\">NodeKind</a>&gt; <a class=\"struct\" href=\"wit_compiler/access/struct.Index.html\" title=\"struct wit_compiler::access::Index\">Index</a>&lt;K&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.file\" class=\"method\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#115-117\">source</a><h4 class=\"code-header\">pub fn <a href=\"wit_compiler/access/struct.Index.html#tymethod.file\" class=\"fn\">file</a>(self) -&gt; <a class=\"struct\" href=\"wit_compiler/queries/struct.FilePath.html\" title=\"struct wit_compiler::queries::FilePath\">FilePath</a></h4></section></div></details>",0,"wit_compiler::access::WorldIndex","wit_compiler::access::InterfaceIndex","wit_compiler::access::RecordIndex","wit_compiler::access::TypeAliasIndex","wit_compiler::access::EnumIndex","wit_compiler::access::FlagsIndex","wit_compiler::access::ResourceIndex","wit_compiler::access::VariantIndex","wit_compiler::access::FunctionIndex","wit_compiler::access::ConstructorIndex","wit_compiler::access::MethodIndex","wit_compiler::access::StaticMethodIndex","wit_compiler::access::RecordFieldIndex","wit_compiler::access::VariantCaseIndex","wit_compiler::access::EnumCaseIndex","wit_compiler::access::FlagsCaseIndex","wit_compiler::access::ExportIndex","wit_compiler::access::ImportIndex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Index%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#158-170\">source</a><a href=\"#impl-Debug-for-Index%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"wit_compiler/access/struct.Index.html\" title=\"struct wit_compiler::access::Index\">Index</a>&lt;K&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#159-169\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","wit_compiler::access::WorldIndex","wit_compiler::access::InterfaceIndex","wit_compiler::access::RecordIndex","wit_compiler::access::TypeAliasIndex","wit_compiler::access::EnumIndex","wit_compiler::access::FlagsIndex","wit_compiler::access::ResourceIndex","wit_compiler::access::VariantIndex","wit_compiler::access::FunctionIndex","wit_compiler::access::ConstructorIndex","wit_compiler::access::MethodIndex","wit_compiler::access::StaticMethodIndex","wit_compiler::access::RecordFieldIndex","wit_compiler::access::VariantCaseIndex","wit_compiler::access::EnumCaseIndex","wit_compiler::access::FlagsCaseIndex","wit_compiler::access::ExportIndex","wit_compiler::access::ImportIndex"],["<section id=\"impl-Eq-for-Index%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#133\">source</a><a href=\"#impl-Eq-for-Index%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"wit_compiler/access/struct.Index.html\" title=\"struct wit_compiler::access::Index\">Index</a>&lt;K&gt;</h3></section>","Eq","wit_compiler::access::WorldIndex","wit_compiler::access::InterfaceIndex","wit_compiler::access::RecordIndex","wit_compiler::access::TypeAliasIndex","wit_compiler::access::EnumIndex","wit_compiler::access::FlagsIndex","wit_compiler::access::ResourceIndex","wit_compiler::access::VariantIndex","wit_compiler::access::FunctionIndex","wit_compiler::access::ConstructorIndex","wit_compiler::access::MethodIndex","wit_compiler::access::StaticMethodIndex","wit_compiler::access::RecordFieldIndex","wit_compiler::access::VariantCaseIndex","wit_compiler::access::EnumCaseIndex","wit_compiler::access::FlagsCaseIndex","wit_compiler::access::ExportIndex","wit_compiler::access::ImportIndex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Index%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#135-140\">source</a><a href=\"#impl-PartialEq-for-Index%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"wit_compiler/access/struct.Index.html\" title=\"struct wit_compiler::access::Index\">Index</a>&lt;K&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#136-139\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","wit_compiler::access::WorldIndex","wit_compiler::access::InterfaceIndex","wit_compiler::access::RecordIndex","wit_compiler::access::TypeAliasIndex","wit_compiler::access::EnumIndex","wit_compiler::access::FlagsIndex","wit_compiler::access::ResourceIndex","wit_compiler::access::VariantIndex","wit_compiler::access::FunctionIndex","wit_compiler::access::ConstructorIndex","wit_compiler::access::MethodIndex","wit_compiler::access::StaticMethodIndex","wit_compiler::access::RecordFieldIndex","wit_compiler::access::VariantCaseIndex","wit_compiler::access::EnumCaseIndex","wit_compiler::access::FlagsCaseIndex","wit_compiler::access::ExportIndex","wit_compiler::access::ImportIndex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Index%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#127-131\">source</a><a href=\"#impl-PartialOrd-for-Index%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"wit_compiler/access/struct.Index.html\" title=\"struct wit_compiler::access::Index\">Index</a>&lt;K&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#128-130\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/cmp.rs.html#1127\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/cmp.rs.html#1144\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/cmp.rs.html#1160\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/cmp.rs.html#1177\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","wit_compiler::access::WorldIndex","wit_compiler::access::InterfaceIndex","wit_compiler::access::RecordIndex","wit_compiler::access::TypeAliasIndex","wit_compiler::access::EnumIndex","wit_compiler::access::FlagsIndex","wit_compiler::access::ResourceIndex","wit_compiler::access::VariantIndex","wit_compiler::access::FunctionIndex","wit_compiler::access::ConstructorIndex","wit_compiler::access::MethodIndex","wit_compiler::access::StaticMethodIndex","wit_compiler::access::RecordFieldIndex","wit_compiler::access::VariantCaseIndex","wit_compiler::access::EnumCaseIndex","wit_compiler::access::FlagsCaseIndex","wit_compiler::access::ExportIndex","wit_compiler::access::ImportIndex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DebugWithDb%3CD%3E-for-Index%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#172-181\">source</a><a href=\"#impl-DebugWithDb%3CD%3E-for-Index%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, K&gt; <a class=\"trait\" href=\"salsa_2022/debug/trait.DebugWithDb.html\" title=\"trait salsa_2022::debug::DebugWithDb\">DebugWithDb</a>&lt;D&gt; for <a class=\"struct\" href=\"wit_compiler/access/struct.Index.html\" title=\"struct wit_compiler::access::Index\">Index</a>&lt;K&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#173-180\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"salsa_2022/debug/trait.DebugWithDb.html#tymethod.fmt\" class=\"fn\">fmt</a>(\n    &amp;self,\n    f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;,\n    _db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;D</a>,\n    _include_all_fields: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>if <code>include_all_fields</code> is <code>false</code> only identity fields should be read, which means:\n- for <a href=\"salsa_2022_macros/attr.input.html\" title=\"attr salsa_2022_macros::input\">#[salsa::input]</a> no fields\n- for <a href=\"salsa_2022_macros/attr.tracked.html\" title=\"attr salsa_2022_macros::tracked\">#[salsa::tracked]</a> only fields with <code>#[id]</code> attribute\n- for <a href=\"salsa_2022_macros/attr.interned.html\" title=\"attr salsa_2022_macros::interned\">#[salsa::interned]</a> any field</div></details><section id=\"method.debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/salsa_2022/debug.rs.html#9-11\">source</a><a href=\"#method.debug\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"salsa_2022/debug/trait.DebugWithDb.html#method.debug\" class=\"fn\">debug</a>&lt;'me, 'db&gt;(&amp;'me self, db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'me Db</a>) -&gt; <a class=\"struct\" href=\"salsa_2022/debug/struct.DebugWith.html\" title=\"struct salsa_2022::debug::DebugWith\">DebugWith</a>&lt;'me, Db&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'me,</div></h4></section><section id=\"method.debug_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/salsa_2022/debug.rs.html#20-22\">source</a><a href=\"#method.debug_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"salsa_2022/debug/trait.DebugWithDb.html#method.debug_with\" class=\"fn\">debug_with</a>&lt;'me, 'db&gt;(\n    &amp;'me self,\n    db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'me Db</a>,\n    include_all_fields: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"struct\" href=\"salsa_2022/debug/struct.DebugWith.html\" title=\"struct salsa_2022::debug::DebugWith\">DebugWith</a>&lt;'me, Db&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'me,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/salsa_2022/debug.rs.html#34-36\">source</a><a href=\"#method.debug_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"salsa_2022/debug/trait.DebugWithDb.html#method.debug_all\" class=\"fn\">debug_all</a>&lt;'me, 'db&gt;(&amp;'me self, db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'me Db</a>) -&gt; <a class=\"struct\" href=\"salsa_2022/debug/struct.DebugWith.html\" title=\"struct salsa_2022::debug::DebugWith\">DebugWith</a>&lt;'me, Db&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'me,</div></h4></section></summary><div class='docblock'>Be careful when using this method inside a tracked function,\nbecause the default macro generated implementation will read all fields,\nmaybe introducing undesired dependencies.</div></details><section id=\"method.into_debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/salsa_2022/debug.rs.html#45-47\">source</a><a href=\"#method.into_debug\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"salsa_2022/debug/trait.DebugWithDb.html#method.into_debug\" class=\"fn\">into_debug</a>&lt;'me, 'db&gt;(self, db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'me Db</a>) -&gt; <a class=\"struct\" href=\"salsa_2022/debug/struct.DebugWith.html\" title=\"struct salsa_2022::debug::DebugWith\">DebugWith</a>&lt;'me, Db&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'me,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_debug_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/salsa_2022/debug.rs.html#59-61\">source</a><a href=\"#method.into_debug_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"salsa_2022/debug/trait.DebugWithDb.html#method.into_debug_all\" class=\"fn\">into_debug_all</a>&lt;'me, 'db&gt;(self, db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;'me Db</a>) -&gt; <a class=\"struct\" href=\"salsa_2022/debug/struct.DebugWith.html\" title=\"struct salsa_2022::debug::DebugWith\">DebugWith</a>&lt;'me, Db&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'me,</div></h4></section></summary><div class='docblock'>Be careful when using this method inside a tracked function,\nbecause the default macro generated implementation will read all fields,\nmaybe introducing undesired dependencies.</div></details></div></details>","DebugWithDb<D>","wit_compiler::access::WorldIndex","wit_compiler::access::InterfaceIndex","wit_compiler::access::RecordIndex","wit_compiler::access::TypeAliasIndex","wit_compiler::access::EnumIndex","wit_compiler::access::FlagsIndex","wit_compiler::access::ResourceIndex","wit_compiler::access::VariantIndex","wit_compiler::access::FunctionIndex","wit_compiler::access::ConstructorIndex","wit_compiler::access::MethodIndex","wit_compiler::access::StaticMethodIndex","wit_compiler::access::RecordFieldIndex","wit_compiler::access::VariantCaseIndex","wit_compiler::access::EnumCaseIndex","wit_compiler::access::FlagsCaseIndex","wit_compiler::access::ExportIndex","wit_compiler::access::ImportIndex"],["<section id=\"impl-Copy-for-Index%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#156\">source</a><a href=\"#impl-Copy-for-Index%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"wit_compiler/access/struct.Index.html\" title=\"struct wit_compiler::access::Index\">Index</a>&lt;K&gt;</h3></section>","Copy","wit_compiler::access::WorldIndex","wit_compiler::access::InterfaceIndex","wit_compiler::access::RecordIndex","wit_compiler::access::TypeAliasIndex","wit_compiler::access::EnumIndex","wit_compiler::access::FlagsIndex","wit_compiler::access::ResourceIndex","wit_compiler::access::VariantIndex","wit_compiler::access::FunctionIndex","wit_compiler::access::ConstructorIndex","wit_compiler::access::MethodIndex","wit_compiler::access::StaticMethodIndex","wit_compiler::access::RecordFieldIndex","wit_compiler::access::VariantCaseIndex","wit_compiler::access::EnumCaseIndex","wit_compiler::access::FlagsCaseIndex","wit_compiler::access::ExportIndex","wit_compiler::access::ImportIndex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Index%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#142-148\">source</a><a href=\"#impl-Hash-for-Index%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"wit_compiler/access/struct.Index.html\" title=\"struct wit_compiler::access::Index\">Index</a>&lt;K&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#143-147\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.77.2/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.77.2/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.77.2/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.77.2/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","wit_compiler::access::WorldIndex","wit_compiler::access::InterfaceIndex","wit_compiler::access::RecordIndex","wit_compiler::access::TypeAliasIndex","wit_compiler::access::EnumIndex","wit_compiler::access::FlagsIndex","wit_compiler::access::ResourceIndex","wit_compiler::access::VariantIndex","wit_compiler::access::FunctionIndex","wit_compiler::access::ConstructorIndex","wit_compiler::access::MethodIndex","wit_compiler::access::StaticMethodIndex","wit_compiler::access::RecordFieldIndex","wit_compiler::access::VariantCaseIndex","wit_compiler::access::EnumCaseIndex","wit_compiler::access::FlagsCaseIndex","wit_compiler::access::ExportIndex","wit_compiler::access::ImportIndex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Index%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#120-125\">source</a><a href=\"#impl-Ord-for-Index%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"wit_compiler/access/struct.Index.html\" title=\"struct wit_compiler::access::Index\">Index</a>&lt;K&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#121-124\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/cmp.rs.html#830-832\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/cmp.rs.html#850-852\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/cmp.rs.html#875-878\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","wit_compiler::access::WorldIndex","wit_compiler::access::InterfaceIndex","wit_compiler::access::RecordIndex","wit_compiler::access::TypeAliasIndex","wit_compiler::access::EnumIndex","wit_compiler::access::FlagsIndex","wit_compiler::access::ResourceIndex","wit_compiler::access::VariantIndex","wit_compiler::access::FunctionIndex","wit_compiler::access::ConstructorIndex","wit_compiler::access::MethodIndex","wit_compiler::access::StaticMethodIndex","wit_compiler::access::RecordFieldIndex","wit_compiler::access::VariantCaseIndex","wit_compiler::access::EnumCaseIndex","wit_compiler::access::FlagsCaseIndex","wit_compiler::access::ExportIndex","wit_compiler::access::ImportIndex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Index%3CK%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#150-154\">source</a><a href=\"#impl-Clone-for-Index%3CK%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"wit_compiler/access/struct.Index.html\" title=\"struct wit_compiler::access::Index\">Index</a>&lt;K&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wit_compiler/access.rs.html#151-153\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","wit_compiler::access::WorldIndex","wit_compiler::access::InterfaceIndex","wit_compiler::access::RecordIndex","wit_compiler::access::TypeAliasIndex","wit_compiler::access::EnumIndex","wit_compiler::access::FlagsIndex","wit_compiler::access::ResourceIndex","wit_compiler::access::VariantIndex","wit_compiler::access::FunctionIndex","wit_compiler::access::ConstructorIndex","wit_compiler::access::MethodIndex","wit_compiler::access::StaticMethodIndex","wit_compiler::access::RecordFieldIndex","wit_compiler::access::VariantCaseIndex","wit_compiler::access::EnumCaseIndex","wit_compiler::access::FlagsCaseIndex","wit_compiler::access::ExportIndex","wit_compiler::access::ImportIndex"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()