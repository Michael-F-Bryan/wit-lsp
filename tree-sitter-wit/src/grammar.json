{
  "name": "wit",
  "word": "identifier",
  "rules": {
    "source_file": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "package_decl"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "top_level_item"
          }
        }
      ]
    },
    "package_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "package"
        },
        {
          "type": "SYMBOL",
          "name": "fully_qualified_package_name"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "fully_qualified_package_name": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "package",
          "content": {
            "type": "SYMBOL",
            "name": "package_name"
          }
        },
        {
          "type": "PREC",
          "value": 1,
          "content": {
            "type": "IMMEDIATE_TOKEN",
            "content": {
              "type": "STRING",
              "value": ":"
            }
          }
        },
        {
          "type": "FIELD",
          "name": "path",
          "content": {
            "type": "SYMBOL",
            "name": "package_path"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "STRING",
                    "value": "@"
                  }
                },
                {
                  "type": "FIELD",
                  "name": "version",
                  "content": {
                    "type": "SYMBOL",
                    "name": "semver"
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "package_name": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "identifier"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "IMMEDIATE_TOKEN",
                  "content": {
                    "type": "STRING",
                    "value": ":"
                  }
                },
                {
                  "type": "SYMBOL",
                  "name": "identifier"
                }
              ]
            }
          }
        ]
      }
    },
    "package_path": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "STRING",
                  "value": "/"
                }
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        }
      ]
    },
    "top_level_item": {
      "type": "CHOICE",
      "members": []
    },
    "semver": {
      "type": "PATTERN",
      "value": "(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "\\w[\\w\\d_-]*"
    },
    "_block_comment": {
      "type": "PATTERN",
      "value": "\\/\\*(?:\\*|[^*])*\\*\\/"
    },
    "_slash_comment": {
      "type": "PATTERN",
      "value": "\\/\\/[^\\n]*"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "[\\s\\n\\t]"
    },
    {
      "type": "SYMBOL",
      "name": "_slash_comment"
    },
    {
      "type": "SYMBOL",
      "name": "_block_comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
